import numpy as np

def add_matrices(A, B):
    
    return [[A[i][j] + B[i][j] for j in range(len(A[0]))] for i in range(len(A))]

def subtract_matrices(A, B):
 
    return [[A[i][j] - B[i][j] for j in range(len(A[0]))] for i in range(len(A))]

def split_matrix(M):
    
    n = len(M)
    mid = n // 2
    A11 = [row[:mid] for row in M[:mid]]
    A12 = [row[mid:] for row in M[:mid]]
    A21 = [row[:mid] for row in M[mid:]]
    A22 = [row[mid:] for row in M[mid:]]
    return A11, A12, A21, A22

def matrix_multiply(A, B):
 
    n = len(A)

    if n == 1:
        return [[A[0][0] * B[0][0]]]
    
    A11, A12, A21, A22 = split_matrix(A)
    B11, B12, B21, B22 = split_matrix(B)

    M1 = matrix_multiply(add_matrices(A11, A22), add_matrices(B11, B22))
    M2 = matrix_multiply(add_matrices(A21, A22), B11)
    M3 = matrix_multiply(A11, subtract_matrices(B12, B22))
    M4 = matrix_multiply(A22, subtract_matrices(B21, B11))
    M5 = matrix_multiply(add_matrices(A11, A12), B22)
    M6 = matrix_multiply(subtract_matrices(A21, A11), add_matrices(B11, B12))
    M7 = matrix_multiply(subtract_matrices(A12, A22), add_matrices(B21, B22))

    C11 = add_matrices(subtract_matrices(add_matrices(M1, M4), M5), M7)
    C12 = add_matrices(M3, M5)
    C21 = add_matrices(M2, M4)
    C22 = add_matrices(subtract_matrices(add_matrices(M1, M3), M2), M6)

    new_matrix = []
    for i in range(len(C11)):
        new_matrix.append(C11[i] + C12[i])
    for i in range(len(C21)):
        new_matrix.append(C21[i] + C22[i])

    return new_matrix


A = [[1, 2, 3, 4],
     [5, 6, 7, 8],
     [9, 10, 11, 12],
     [13, 14, 15, 16]]

B = [[17, 18, 19, 20],
     [21, 22, 23, 24],
     [25, 26, 27, 28], v
     [29, 30, 31, 32]]

result = matrix_multiply(A, B)
print(np.array(result))
